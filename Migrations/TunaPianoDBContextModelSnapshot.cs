// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace TunaPianoSB.Migrations
{
    [DbContext(typeof(TunaPianoDBContext))]
    partial class TunaPianoDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TunaPianoSB.Models.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ArtistId"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("ArtistName")
                        .HasColumnType("text");

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.HasKey("ArtistId");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            ArtistId = 1,
                            Age = 33,
                            ArtistName = "Adele",
                            Bio = "British singer-songwriter"
                        },
                        new
                        {
                            ArtistId = 2,
                            Age = 30,
                            ArtistName = "Ed Sheeran",
                            Bio = "Acclaimed pop artist"
                        },
                        new
                        {
                            ArtistId = 3,
                            Age = 40,
                            ArtistName = "Metallica",
                            Bio = "Legendary metal band"
                        });
                });

            modelBuilder.Entity("TunaPianoSB.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GenreId"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("Song_GenreId")
                        .HasColumnType("integer");

                    b.HasKey("GenreId");

                    b.HasIndex("Song_GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            Description = "Pop"
                        },
                        new
                        {
                            GenreId = 2,
                            Description = "Rock"
                        },
                        new
                        {
                            GenreId = 3,
                            Description = "Metal"
                        });
                });

            modelBuilder.Entity("TunaPianoSB.Models.Song", b =>
                {
                    b.Property<int>("SongId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SongId"));

                    b.Property<string>("AlbumName")
                        .HasColumnType("text");

                    b.Property<int>("ArtistId")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("Length")
                        .HasColumnType("interval");

                    b.Property<string>("SongName")
                        .HasColumnType("text");

                    b.Property<int?>("Song_GenreId")
                        .HasColumnType("integer");

                    b.HasKey("SongId");

                    b.HasIndex("ArtistId");

                    b.HasIndex("Song_GenreId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            SongId = 1,
                            AlbumName = "25",
                            ArtistId = 1,
                            Length = new TimeSpan(0, 0, 4, 55, 0),
                            SongName = "Hello"
                        },
                        new
                        {
                            SongId = 2,
                            AlbumName = "÷",
                            ArtistId = 2,
                            Length = new TimeSpan(0, 0, 3, 54, 0),
                            SongName = "Shape of You"
                        },
                        new
                        {
                            SongId = 3,
                            AlbumName = "Metallica",
                            ArtistId = 3,
                            Length = new TimeSpan(0, 0, 5, 29, 0),
                            SongName = "Enter Sandman"
                        });
                });

            modelBuilder.Entity("TunaPianoSB.Models.Song_Genre", b =>
                {
                    b.Property<int>("Song_GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Song_GenreId"));

                    b.Property<int>("GenreId")
                        .HasColumnType("integer");

                    b.Property<int>("SongId")
                        .HasColumnType("integer");

                    b.HasKey("Song_GenreId");

                    b.ToTable("Song_Genres");

                    b.HasData(
                        new
                        {
                            Song_GenreId = 1,
                            GenreId = 1,
                            SongId = 1
                        },
                        new
                        {
                            Song_GenreId = 2,
                            GenreId = 1,
                            SongId = 2
                        },
                        new
                        {
                            Song_GenreId = 3,
                            GenreId = 2,
                            SongId = 3
                        });
                });

            modelBuilder.Entity("TunaPianoSB.Models.Genre", b =>
                {
                    b.HasOne("TunaPianoSB.Models.Song_Genre", null)
                        .WithMany("Genres")
                        .HasForeignKey("Song_GenreId");
                });

            modelBuilder.Entity("TunaPianoSB.Models.Song", b =>
                {
                    b.HasOne("TunaPianoSB.Models.Artist", "Artist")
                        .WithMany("Songs")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TunaPianoSB.Models.Song_Genre", null)
                        .WithMany("Songs")
                        .HasForeignKey("Song_GenreId");

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("TunaPianoSB.Models.Artist", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("TunaPianoSB.Models.Song_Genre", b =>
                {
                    b.Navigation("Genres");

                    b.Navigation("Songs");
                });
#pragma warning restore 612, 618
        }
    }
}
